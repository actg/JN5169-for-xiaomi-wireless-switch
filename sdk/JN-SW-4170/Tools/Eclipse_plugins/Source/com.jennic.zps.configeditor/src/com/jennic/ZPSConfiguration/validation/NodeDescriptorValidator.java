/**
 * <copyright>
 * </copyright>
 *
 * $Id: NodeDescriptorValidator.java 12828 2009-05-15 10:13:10Z mwild $
 */
package com.jennic.ZPSConfiguration.validation;

import com.jennic.ZPSConfiguration.FrequencyBands;
import com.jennic.ZPSConfiguration.Node;
import com.jennic.ZPSConfiguration.NodeLogicalType;

import java.math.BigInteger;

/**
 * A sample validator interface for {@link com.jennic.ZPSConfiguration.NodeDescriptor}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface NodeDescriptorValidator {
	boolean validate();

	boolean validateDeviceId(short value);
	boolean validateManufacturerCode(short value);
	boolean validateLogicalType(NodeLogicalType value);
	boolean validateComplexDescriptorAvailable(boolean value);
	boolean validateUserDescriptorAvailable(boolean value);
	boolean validateAPSFlags(BigInteger value);
	boolean validateFrequencyBand(FrequencyBands value);
	boolean validateAlternatePANCoordinator(boolean value);
	boolean validateDeviceType(boolean value);
	boolean validatePowerSource(boolean value);
	boolean validateRxOnWhenIdle(boolean value);
	boolean validateSecurity(boolean value);
	boolean validateAllocateAddress(boolean value);
	boolean validateMaximumBufferSize(BigInteger value);
	boolean validateMaximumIncomingTransferSize(int value);
	boolean validateMaximumOutgoingTransferSize(int value);
	boolean validateExtendedActiveEndpointListAvailable(boolean value);
	boolean validateExtendedSimpleDescriptorListAvailable(boolean value);
	boolean validatePrimaryTrustCenter(boolean value);
	boolean validateBackupTrustCenter(boolean value);
	boolean validatePrimaryBindingTableCache(boolean value);
	boolean validateBackupBindingTableCache(boolean value);
	boolean validatePrimaryDiscoveryCache(boolean value);
	boolean validateBackupDiscoveryCache(boolean value);
	boolean validateNode(Node value);
	boolean validateNetworkManager(boolean value);
}
